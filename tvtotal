#!/bin/bash

get_video_urls()
{
	episode="${1}"

	listing="$(wget -O- -o/dev/null "http://tvtotal.prosieben.de/tvtotal/includes/php/ajax.php?action=getSendungById&contentType=video&showId=${episode}-00&teaserType=video&tabbing=sendung")"

	date="$(echo "$listing" | grep 'related_linktext_headright' | tail -1 | cut -d '>' -f2 | cut -d '<' -f1 | sed -e 's/\./\t/g')"
	day="$(echo "${date}" | cut -f1)"
	month="$(echo "${date}" | cut -f2)"
	year="$(echo "${date}" | cut -f3)"

	parts="$(echo "${listing}" | grep '<img' | cut -d'_' -f7 | cut -d'.' -f1)"
	if [[ $parts = "" ]]; then
		# Old episodes' numbers are not listed
		parts=""
		n="$(echo "$listing" | grep -c '<img')"
		for((it=1; it<=$n; it++)); do
			[ $it -lt 10 ] && it_f="0$it" || it_f="$it"
			parts="$parts$it_f
"
		done
	fi
	echo "${parts}" | while read it; do
		[[ "$it" = "" ]] && continue
		echo -e "${it}\thttp://c11021-o.l.core.cdn.streamfarm.net/11021brainpool/ondemand/3583brainpool/tvtotal/${year}/${month}/${day}/${year}${month}${day}_tvttd${episode}_${it}.flv"
	done
}

get_playlist_from_cache()
{
	local episode="${1}"

	local dir="${HOME}/.tvtotal"
	[ ! -e "$dir" ] && mkdir -p "$dir"

	local fname="${dir}/${episode}"
	if [ -e "$fname" ]; then
		cat "$fname"
	else
		local playlist
		playlist="$(get_video_urls "${episode}")" || return 1
		echo "$playlist" > "${fname}"
		echo "$playlist"
	fi
}

get_url_from_cache()
{
	local episode="${1}"
	local part="${2}"

	local playlist
	playlist="$(get_playlist_from_cache "$episode")" || return 1
	if [[ "$part" = "" ]]; then
		echo "$playlist" | cut -f2
	else
		echo "$playlist" | while read it; do
			if [[ "$(echo "$it" | cut -f1)" = "${part}" ]]; then
				echo "$it" | cut -f2
				break
			fi
		done
	fi
}

tidy_episode()
{
	local episode="${1}"

	local episode_length=`echo $episode | awk '{ print length($0); }'`

	while [[ $episode_length < 4 ]]; do
		episode='0'$episode
		episode_length=$[$episode_length+1]
	done
	echo "$episode"
}

tidy_part()
{
	local part="${1}"

	if [[ "$part" = "" ]]; then
		return 0
	fi

	local part_length=`echo $part | awk '{ print length($0); }'`
	while [[ $part_length < 2 ]]; do
		part='0'$part
		part_length=$[$part_length+1]
	done
	echo "$part"
}

if [[ $# < 1 ]]; then
	echo "Usage: $0 <episode> [part]" >&2
	exit 1
fi

episode="$(tidy_episode "${1}")"
part="$(tidy_part "${2}")"

get_url_from_cache "$episode" "$part"
